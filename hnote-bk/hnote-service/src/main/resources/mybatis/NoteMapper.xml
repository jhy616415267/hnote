<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mingshan.service.dao.NoteDao">
    <resultMap id="noteResultMap" type="me.mingshan.facade.model.Note">
        <id column="id" property="id"/>
        <result column="content" property="content"/>
        <result column="author" property="author"/>
        <result column="source" property="source"/>
        <result column="isDeleted" property="isDeleted"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>

        <association property="noteType" javaType="me.mingshan.facade.model.NoteType">
            <id column="nt_id" property="id"/>
            <result column="nt_name" property="name"/>
        </association>

        <association property="folder" javaType="me.mingshan.facade.model.Folder">
            <id column="folder_id" property="id"/>
            <result column="folder_name" property="name"/>
            <result column="folder_level" property="level"/>
            <result column="folder_pid" property="pid"/>
        </association>

        <collection property="tags" ofType="me.mingshan.facade.model.Tag">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
        </collection>
    </resultMap>

    <select id="selectByPrimaryKey"  parameterType="java.lang.Long" resultMap="noteResultMap">
        select n.id,
               n.content,
               n.author,
               n.source,
               n.is_deleted,
               n.gmt_create,
               n.gmt_modified,
               nt.id nt_id,
               nt.name nt_name,
               f.id folder_id,
               f.name folder_name,
               f.level folder_level,
               f.pid folder_pid,
               t.tag_id,
               t.tag_name
        from hn_note n
        left join hn_note_type nt on nt.id = n.type_id
        left join hn_folder f on f.id = n.folder_id
        left join (SELECT  tag.id tag_id,
                           tag.name tag_name,
                           ntg.note_id
                   from hn_tag tag
                   LEFT JOIN hn_note_to_tag ntg on ntg.tag_id = tag.id) t on t.note_id = n.id
        where n.id = #{id}
    </select>
    
    <select id="selectByPage" resultMap="noteResultMap">
        select n.id,
               n.content,
               n.author,
               n.source,
               n.is_deleted,
               n.gmt_create,
               n.gmt_modified,
               nt.id nt_id,
               nt.name nt_name,
               f.id folder_id,
               f.name folder_name,
               f.level folder_level,
               f.pid folder_pid,
               t.tag_id,
               t.tag_name
        from hn_note n
        left join hn_note_type nt on nt.id = n.type_id
        left join hn_folder f on f.id = n.folder_id
                left join (SELECT  tag.id tag_id,
                           tag.name tag_name,
                           ntg.note_id
                   from hn_tag tag
                   LEFT JOIN hn_note_to_tag ntg on ntg.tag_id = tag.id) t on t.note_id = n.id
    </select>
</mapper>