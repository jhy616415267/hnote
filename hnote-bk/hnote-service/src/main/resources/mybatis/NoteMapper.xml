<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mingshan.service.dao.NoteDao">
    <resultMap id="noteResultMap" type="me.mingshan.facade.model.Note">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="author" property="author"/>
        <result column="source" property="source"/>
        <result column="uid" property="uid"/>
        <result column="is_deleted" property="deleted"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>

        <association property="noteType" javaType="me.mingshan.facade.model.NoteType">
            <id column="nt_id" property="id"/>
            <result column="nt_name" property="name"/>
        </association>

        <association property="folder" javaType="me.mingshan.facade.model.Folder">
            <id column="folder_id" property="id"/>
            <result column="folder_name" property="label"/>
            <result column="folder_level" property="level"/>
            <result column="folder_pid" property="pid"/>
        </association>

        <collection property="tags" ofType="me.mingshan.facade.model.Tag">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="name"/>
        </collection>
    </resultMap>

    <resultMap id="simpleNoteResultMap" type="me.mingshan.facade.model.Note">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="source" property="source"/>
        <result column="uid" property="uid"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="is_deleted" property="deleted"/>

        <association property="noteType" javaType="me.mingshan.facade.model.NoteType">
            <id column="nt_id" property="id"/>
            <result column="nt_name" property="name"/>
        </association>

        <association property="folder" javaType="me.mingshan.facade.model.Folder">
            <id column="folder_id" property="id"/>
            <result column="folder_name" property="label"/>
            <result column="folder_level" property="level"/>
            <result column="folder_pid" property="pid"/>
        </association>
    </resultMap>

    <!-- 查询sql -->
    <sql id="query_note_where">

        <if test="ids !=null and ids!='' ">
            <!-- foreach  遍历集合  拼接sql  id in(1,2) -->
            <foreach collection="ids" item="item" open="id in(" close=")" separator="," >
                #{item}
            </foreach>
        </if>

    </sql>

    <select id="selectByPrimaryKey"  parameterType="java.lang.Long" resultMap="noteResultMap">
        select n.id,
               n.title,
               n.content,
               n.author,
               n.source,
               n.uid,
               n.is_deleted,
               n.gmt_create,
               n.gmt_modified,
               nt.id nt_id,
               nt.name nt_name,
               f.id folder_id,
               f.label folder_name,
               f.level folder_level,
               f.pid folder_pid,
               t.tag_id,
               t.tag_name
        from hn_note n
        left join hn_note_type nt on nt.id = n.type_id
        left join hn_folder f on f.id = n.folder_id
        left join (SELECT  tag.id tag_id,
                           tag.name tag_name,
                           ntg.note_id
                   from hn_tag tag
                   LEFT JOIN hn_note_to_tag ntg on ntg.tag_id = tag.id) t on t.note_id = n.id
        where n.id = #{id} and n.is_deleted = 0
    </select>
    
    <select id="selectByPage" parameterType="java.lang.Long" resultMap="simpleNoteResultMap">
        select n.id,
               n.title,
               n.uid,
               n.is_deleted,
               n.gmt_create,
               n.gmt_modified,
               nt.id nt_id,
               nt.name nt_name,
               f.id folder_id,
               f.label folder_name,
               f.level folder_level,
               f.pid folder_pid
        from hn_note n
        left join hn_note_type nt on nt.id = n.type_id
        left join hn_folder f on f.id = n.folder_id
        where n.is_deleted = 0 and f.id = #{fid} order by n.gmt_create desc
    </select>

    <select id="selectByToken" parameterType="java.lang.String" resultMap="simpleNoteResultMap">
        select n.id,
               n.title,
               n.uid,
               n.is_deleted,
               n.gmt_create,
               n.gmt_modified,
               nt.id nt_id,
               nt.name nt_name,
               f.id folder_id,
               f.label folder_name,
               f.level folder_level,
               f.pid folder_pid
        from hn_note n
        left join hn_note_type nt on nt.id = n.type_id
        left join hn_folder f on f.id = n.folder_id
        where n.is_deleted = 0 and n.title LIKE '%${value}%' order by n.gmt_create desc
    </select>

    <select id="selectLastestNotes" resultMap="simpleNoteResultMap">
        select n.id,
               n.title,
               n.uid,
               n.is_deleted,
               n.gmt_create,
               n.gmt_modified,
               nt.id nt_id,
               nt.name nt_name,
               f.id folder_id,
               f.label folder_name,
               f.level folder_level,
               f.pid folder_pid
        from hn_note n
        left join hn_note_type nt on nt.id = n.type_id
        left join hn_folder f on f.id = n.folder_id
        where n.is_deleted = 0 order by n.gmt_create desc
    </select>

    <!-- 添加-->
    <insert id="insert" parameterType="me.mingshan.facade.model.Note" useGeneratedKeys="true" keyProperty="id">
        insert into hn_note (
            title,
            content,
            author,
            source,
            uid,
            type_id,
            folder_id,
            gmt_create,
            gmt_modified)
        values(
            #{title},
            #{content},
            #{author},
            #{source},
            #{uid},
            #{typeId},
            #{folderId},
            NOW(),
            NOW())
    </insert>

    <!--逻辑删除-->
    <update id="delete" parameterType="me.mingshan.facade.model.Note">
        update hn_note set is_deleted = 1 where is_deleted = 0 and id = #{id}
    </update>

    <!--逻辑删除-->
    <update id="deleteByNidTid">
        delete from hn_note_to_tag  where is_deleted = 0 and tag_id = #{tid} and note_id = #{nid}
    </update>

    <update id="update" parameterType="me.mingshan.facade.model.Note">
        update hn_note
        <set>
            <if test="title !=null and title !=''">
                title=#{title},
            </if>
            <if test="content != null and content != ''">
                content=#{content},
            </if>
            <if test="source != null and source != ''">
                source=#{source},
            </if>
            <if test="folderId != null and folderId != 0">
                folderId=#{folderId}
            </if>
        </set>

        , gmt_modified = NOW()
        where id=#{id}
    </update>
</mapper>